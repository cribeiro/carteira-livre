apply plugin: 'jacoco'

jacoco {
    toolVersion "0.7.2.201409121644"
}

project.afterEvaluate {
    def buildTypes = android.buildTypes.collect { type -> type.name }
    def productFlavors = android.productFlavors.collect { flavor -> flavor.name }

    productFlavors.each { productFlavorName ->
        buildTypes.each { buildTypeName ->
            def sourceName = "${productFlavorName}${buildTypeName.capitalize()}"
            def sourcePath = "${productFlavorName}/${buildTypeName}"
            def testTaskName = "test${sourceName.capitalize()}UnitTest"

            task "${testTaskName}Coverage" (type:JacocoReport, dependsOn: "$testTaskName") {
                group = "Reporting"
                description = "Generate Jacoco coverage reports on the ${sourceName.capitalize()} build."

                classDirectories = fileTree(
                        dir: "${project.buildDir}/intermediates/classes/${sourcePath}",
                        excludes: ['**/R.class', '**/R$*.class', '**/*$ViewInjector*.*', '**/BuildConfig.*', '**/Manifest*.*','**/*$ViewBinder*.*'] )

                def coverageSourceDirs = [
                        "src/main/java"
                ]
                additionalSourceDirs = files(coverageSourceDirs)
                sourceDirectories = files(coverageSourceDirs)
                executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")

                reports {
                    xml.enabled = false
                    html.enabled = true
                    csv.enabled = false
                    html.destination = "${buildDir}/reports/${testTaskName}Coverage"
                }
            }
        }
    }
}